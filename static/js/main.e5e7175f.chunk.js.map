{"version":3,"sources":["component/Card.js","component/CardList.js","component/SearchBox.js","component/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","Robots","map","user","i","username","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","reponse","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAiBeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAE3B,OACC,sBAAKC,UAAU,mDAAf,UACG,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACG,6BAAKF,IACL,kCAAKC,EAAL,cCaOK,EArBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACD,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACA,cACA,EADA,CAGAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBW,SAAUJ,EAAOG,GAAGC,SACpBV,MAAOM,EAAOG,GAAGT,OAJZS,SCSOE,EAlBG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACC,qBAAKX,UAAU,MAAf,SACA,uBAEAA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCMDI,EAbA,SAACC,GAEf,OACE,qBAAKC,MAAQ,CAACC,UAAU,SAAUC,OAAQ,mBAAoBC,OAAQ,SAAtE,SAEAJ,EAAMK,YC6CMC,G,wDA3CX,aAAe,IAAD,8BACb,gBAcDC,eAAgB,SAACC,GAChB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAdzC,EAAKC,MAAQ,CACjBxB,OAAQ,GACRM,YAAa,IAJI,E,qDASd,WAAoB,IAAD,OAClBmB,MAAM,8CACLC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACrB,OAAQ6B,S,oBAS1C,WAAU,IAAD,EACwBC,KAAKN,MAA5BxB,EADD,EACCA,OAAQM,EADT,EACSA,YACXyB,EAAiB/B,EAAOgC,QAAO,SAAAhC,GAClC,OAAOA,EAAOP,KAAKwC,cAAcC,SAAS5B,EAAY2B,kBAEtD,OAAQjC,EAAOmC,OAIhB,sBAAKvC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWW,aAAgBuB,KAAKX,iBAChC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUnB,OAAQ+B,SAPf,8C,GA5BWK,cCGHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCEdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAIhDX,M","file":"static/js/main.e5e7175f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n\t\r\n\treturn (\r\n\t\t<div className='bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5'>\r\n\t\t   <img alt='Robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t   <div>\r\n\t\t      <h2>{name}</h2>\r\n\t\t      <p> {email} </p>\r\n\t\t    </div>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card  from  './Card';\r\n\r\nconst CardList = ({Robots}) => {\r\n\t\treturn(\r\n <div>\r\n {\r\n\t\t\tRobots.map((user, i) =>{\r\n\t\t\treturn(\r\n\t\t\t<\r\n\t\t\tCard \r\n\t\t\tkey={i} \r\n\t\t\tid={Robots[i].id} \r\n\t\t\tname={Robots[i].name} \r\n\t\t\tusername={Robots[i].username} \r\n\t\t\temail={Robots[i].email} \r\n\t\t\t/>\r\n\t\t\t);\r\n})\r\n}\r\n </div>\r\n          )    \r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n   return(\r\n   \t<div className='pa2'>\r\n    <\r\n    input \r\n    className='pa3 ba b--green bg-lightest-blue'\r\n    type='search' \r\n    placeholder='Search Robots' \r\n    onChange = {searchChange}\r\n\r\n    />\r\n\r\n    </div>\r\n\r\n\r\n   \t);\r\n\r\n}\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n\t\r\n\treturn (\r\n\t\t <div style ={{overflowY:'scroll', border: '10px solid white', height: '600px'}} >\r\n\t\r\n\t\t{props.children}\r\n\r\n\t\t</div>\r\n\r\n\t\t);\r\n\r\n\r\n};\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../component/CardList';\r\nimport SearchBox from '../component/SearchBox';\r\nimport Scroll from '../component/Scroll';\r\n// import { Robots } from './Robots';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n    \tsuper()\r\n    \tthis.state = {\r\n\tRobots: [],\r\n\tsearchfield: ''\r\n}\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n    \tfetch('https://jsonplaceholder.typicode.com/users')\r\n    \t.then(reponse => reponse.json())\r\n    \t.then(users => this.setState({Robots: users}));\r\n    }\r\n\r\n    onSearchChange =(event) => {\r\n    \tthis.setState({searchfield: event.target.value})\r\n    \t\r\n    \t     }\r\n         \r\n    \r\n\trender() {\r\n    const {Robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = Robots.filter(Robots =>{\r\n    \treturn Robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n     return !Robots.length ?\r\n     \t <h1>Loading </h1> :\r\n\r\n     (\r\n   \t<div className='tc'>\r\n   \t<h1 className='f1'> Robofriends </h1>\r\n   \t<SearchBox searchChange = {this.onSearchChange} />\r\n   \t<Scroll>\r\n   \t<CardList Robots={filteredRobots} />\r\n   \t</Scroll>\r\n   \t</div>\r\n   \t);\r\n\r\n}\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { Robots } from './Robots';\nimport './index.css';\nimport App from './container/App';\nimport 'tachyons';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}